@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  /*height: 100%; !* Explicit height setting *!*/
  font-family: "Inter", sans-serif;
}


@layer utilities {
  /*nav bar*/
  .group {
    position: relative;
  }

  .dropdown-content {
    display: none;
    position: absolute;
    left: 0;
    top: 100%;
    background-color: #fff;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    min-width: 160px;
    z-index: 1000;
  }

  .group:hover .dropdown-content {
    display: block;
  }

  .dropdown-item {
    padding: 12px 16px;
    color: black;
    text-decoration: none;
    display: block;
  }

  .dropdown-item:hover {
    background-color: #f6f6f6;
  }

  .bg-green-100 {
    background: linear-gradient(135deg, #a8edea 0%, #fed6e3 80%);
    background-attachment: fixed;
  }

  .text-custom-purple-light {
    /*color: #FFEE6F;*/
    /*color: #A4ABD6*/
    color: #7561d5;
  }

  .text-custom-purple-dark {
    color: #5a5186;
  }
  .text-purple1 {
    color: #A4ABD6;
  }
    /* 在全局样式或者单独的样式文件中 */
  .bg-text-purple1 {
    background-color: #A4ABD6; /* 提高优先级 */
  }

   .text-yellow1 {
    color: #FFEE6F;
  }
    .text-logo {
    color: #785B4B;
  }

  .volume-button:hover {
    @apply bg-purple-300;
    transform: translateY(-2px);
  }
  .volume-button {

    display: flex;
    align-items: center;
    justify-content: center;
  }

  .btn_white {
    @apply border-white bg-white px-8 py-3 text-green-50;
  }

  .btn_white_text {
    @apply border-white bg-white px-8 py-3 text-gray-90;
  }

  .btn_green {
    @apply border-green-50 bg-green-50 px-8 py-5 text-white;
  }

  .btn_dark_green {
    @apply bg-green-90 px-8 py-4 text-white transition-all hover:bg-black;
  }

  .btn_dark_green_outline {
    @apply border-gray-20 bg-green-90 px-8 py-5 text-white;
  }

  .max-container {
    @apply mx-auto max-w-[1440px];
  }

  .padding-container {
    @apply px-6 lg:px-20 3xl:px-0;
  }

  .flexCenter {
    @apply flex items-center justify-center;
  }

  .flexBetween {
    @apply flex items-center justify-between;
  }

  .flexStart {
    @apply flex items-center justify-start;
  }

  .flexEnd {
    @apply flex items-center justify-end;
  }

  .dropdown-content {
    @apply hidden absolute left-0 mt-1 w-40 bg-white shadow-md z-10;
  }

  /* Hide scrollbar for Chrome, Safari and Opera */
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  .hide-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  /* Hide scrollbar for Chrome, Safari and Opera */
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  .hide-scrollbar {
    -ms-overflow-style: none;
    /* IE and Edge */
    scrollbar-width: none;
    /* Firefox */
  }
  .text-primary {
    @apply text-black;
  }

  .text-tertiary {
    @apply text-gray-500;
  }

  .layout-main {
    @apply py-12; /* Increase y-padding for more space */
  }

  /* Input and button styling for better visual hierarchy */
  .input-search {
    @apply text-lg border rounded-tl rounded-bl p-2 w-full;
  }

  .button-search {
    @apply text-lg bg-green-500 hover:bg-green-700 text-white py-2 px-4 rounded-tr rounded-br w-full;
  }

  .situation-button {
    flex: 0 0 auto;
    width: 140px;
    height: 140px;
    margin: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    border-radius: 0.5rem;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s;
    background-color: white;
    cursor: pointer;
  }

  .situation-button:hover {
    transform: translateY(-2px);
  }

  .situation-button-selected {
    @apply bg-purple-300 text-white;
  }

  .level-button {
    padding: 0.5rem 1rem;
    margin: 0.5rem;
    border-radius: 9999px;
    transition: background-color 0.3s;
    white-space: nowrap;
    background-color: white;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  }

  .level-button:hover {
    transform: translateY(-2px);
  }

  .level-button-selected {
    @apply bg-purple-300 text-white;
  }

  .play-button {
    @apply bg-purple-200 text-white font-bold rounded-full p-4 inline-flex items-center justify-center shadow-md transition duration-300 ease-in-out;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    width: 70px;
    height: 70px;
  }

  .play-button:hover {
    @apply bg-purple-300;
    transform: translateY(-2px);
  }

  /* The play and pause icons should be the same size as the buttons.*/
  .play-icon,
  .pause-icon {
    width: 50px;
    height: 50px;
  }

  /* Style the button text to ensure it is on the same line as the icon and centred vertically */
  .play-text {
    @apply ml-2 text-lg;
  }

  .reference-text {
    font-family: "ReferenceFont", sans-serif;
    font-size: 14px;
    color: #888;
  }

  .volume-button {
    @apply text-black bg-white border border-gray-300 hover:bg-gray-50;
    transition:
      background-color 0.2s,
      transform 0.1s;
    width: 40px; /* Circle diameter */
    height: 40px; /* Circle diameter */
    border-radius: 9999px; /* Circle border radius */
    margin: 0 8px; /* Spacing between buttons */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  }

  .volume-button-selected {
    @apply bg-purple-300 text-white border-purple-300 hover:bg-purple-400;
  }

  /* Button is slightly larger when hovered */
  .volume-button:hover {
    @apply bg-purple-300;
    transform: translateY(-2px);
  }

  /* Container for the self-test volume buttons */
  .volume-container {
    @apply mt-4 mb-6 flex justify-center items-center gap-2;
  }

  .performance-info,
  .recommendation-info {
    margin: 0;
    padding: 0;
    line-height: 1.2; /* Adjust as needed */
    @apply mt-0 mb-1; /* Tailwind classes for margin top and bottom */
  }

  .disclaimer {
    background: #f8f8f8;
    padding: 10px;
    border-radius: 5px;
    margin-top: 20px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    font-size: 0.875rem; /* 14px */
  }

  .quote {
    border-left: 4px solid rgb(206, 162, 199);
    padding-left: 1rem;
    font-size: 1.2rem;
    font-style: italic;
  }

  .arrow::after {
    content: '';
    display: inline-block;
    width: 0;
    height: 0;
    border-top: 8px solid transparent; 
    border-bottom: 8px solid transparent; 
    border-left: 16px solid currentColor; 
    vertical-align: middle;
    margin-left: 8px; 
    transition: transform 0.3s ease; 
  }
  
  .arrow:hover::after {
    transform: translateX(5px);
  }


}


/* memory game */
html,


a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

.board {
  display: grid;
  justify-content: center;
  margin: auto;
  grid-template-columns: repeat(4, 120px);
  grid-gap: 50px;
  padding-top: 10px;
  padding-bottom: 30px;
}
.newboard {
  display: grid;
  justify-content: center;
  margin: auto;
  grid-template-columns: repeat(6, 120px);
  grid-gap: 50px;
  padding-top: 10px;
  padding-bottom: 30px;
}
.card {
  border-radius: 10px;
  perspective: 1000px;
  text-align: center;
  height: 120px;
  width: 120px;
  transform-style: preserve-3d;
  transition: all 0.2s;
  user-select: none;
  display: flex;
  justify-content: center;
  align-items: center;


}
.card img { /* 假设图标是以img标签的形式插入 */
  max-width: 100%; /* 防止图片溢出容器 */
  /*height: auto; !* 保持图片的原始宽高比 *!*/
  max-height: 100%;
  object-fit: contain;

}

.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
  border-radius: 50%; /* Keep the border-radius if you want a round shape */
}

.card.gameover {
  pointer-events: none;
}
.card-0 {
  transform: rotateY(0deg);
}
.card.active .card-inner {
  transform: rotateY(180deg);
}
.card.matched .card-front {
  background-color: var(--success-color);
  color: white;
}
.card-front,
.card-back {
  background-color: var(--accent-color);
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  backface-visibility: hidden;
  height: 100%;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.card-front {
  transform: rotateY(0deg);
  background-color: #eee;
  line-height: 70px;
  vertical-align: middle;
  text-align: center;
  font-size: 50px;

  z-index: 2;
}
.card-back {
  background-color: #ddd;

  transform: rotateY(0);
  z-index: 1;
}
.card-back::after {
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  width: 75%;
  height: 75%;
  border-radius: 50%;
}

@media (max-width: 768px) {
  .card {
    width: 60px; /* Smaller cards on mobile */
    height: 60px;
  }
}

.menu {
  display: flex;
  align-items: center;
  justify-content: space-around; /* This will space out the elements evenly */
  padding: 10px;
  border-radius: 25px; /* This gives a rounded shape to your menu bar */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: adds shadow for depth */
  margin-bottom: 20px; /* Adds some space below the menu bar */
}

.menu p {
  margin: 0; /* Removes default margins */
  color: white; /* Sets text color to white */
  padding: 10px 20px; /* Adds padding inside the counters/timer */
  border-radius: 15px; /* Rounds the corners of counters/timer */
  font-size: 20px; /* Adjust font size as needed */
}

.reset-btn {
  background-color: var(--soft-yellow1);
  color: white; /* Sets the button text to white */
  padding: 10px 20px; /* Adds padding inside the button */
  border: none; /* Removes border */
  border-radius: 15px; /* Rounds the corners of the button */
  font-size: 20px; /* Adjust font size as needed */
  cursor: pointer; /* Changes cursor to pointer on hover */
  outline: none; /* Removes outline */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: adds shadow for depth */
  transition: transform 0.1s, background-color 0.3s; /* 添加transform属性的过渡效果 */
}
.reset-btn:active {
  transform: scale(0.95); /* 当按钮被点击时，稍微缩小 */
  background-color: var(--warning-color);
}
@media (max-width: 480px) {
  .modal-actions {
    flex-direction: column;
  }

  .modal-button {
    width: 100%;
    margin: 10px 0;
  }
  }
  .game-header {
    text-align: center;
    margin-bottom: 20px;
  }

  .game-title {
    color: #5a5a5a;
    font-size: 24px;
    margin: 0;
  }

  .game-instructions {
    color: #787878;
    font-size: 16px;
    margin-top: 5px;
  }

/* You can add additional classes based on the functionality you have in your game */
:root {
  --primary-color: #f1e1e8; /* light pink background */
  --info-color: #e3a4be; /* lighter pink for information */
  --success-color: #C8E4BE; /* a soft green for success messages */
  --warning-color: #fbbd02; /* a gentle yellow for warnings */
  --light-color: #f9f1f3; /* a very light pink for card backgrounds */
  --accent-color: #c87ea2; /* an accent pink for highlights or buttons */
  --soft-purple: #a4abd6;
  --soft-blue: #91c2ff;
  --light-blue: #C6DBEA;
  --soft-yellow: #ffee6f;
  --soft-yellow1:#FEDD7C;
  --more-pink: #e291ec;
  --soft-pink: #efadba;
}

/*game-popup window*/
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }

  .modal-content {
    background: #fff;
    border-radius: 15px;
    padding: 30px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    text-align: center;
    width: 90%;
    max-width: 500px;
  }

  .modal-header {
    margin-bottom: 20px;
  }

  .modal-header h3 {
    font-size: 24px;
    color: #333;
    margin: 0;
  }

  .modal-body {
    font-size: 16px;
    line-height: 1.6;
    color: #666;
  }

  .modal-actions {
    margin-top: 30px;
  }

  .modal-button {
    padding: 10px 20px;
    border-radius: 8px;
    border: none;
    margin: 0 10px;
    cursor: pointer;
    font-weight: bold;
    transition: all 0.2s;
  }

  .modal-button.next {
    background-color: #4CAF50; /* Green */
    color: white;
  }

  .modal-button.replay {
    background-color: #f44336; /* Red */
    color: white;
  }

  .modal-button:hover {
    opacity: 0.8;
  }


/*game instruction*/
/* Assuming the .board is where the game is played and its container is positioned relative */
.game-container {
  position: relative;
}

.instruction-prompt {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 50%; /* Takes half the space */
  height: 100%; /* Take full height available */
  display: flex;
  justify-content: center;
  align-items: flex-end; /* Aligns the guide-image to the bottom */
  cursor: pointer;
}
.girl-container {
  position: absolute;
  right: -40%; /* Move the girl image further right. Adjust percentage as needed */
  bottom: 20px; /* Position from the bottom */
  display: flex;
  align-items: flex-end; /* Aligns the guide-image to the bottom */
  width: 60%; /* Increase if needed to push further right */
  pointer-events: none; /* Ensures the container doesn't block clicks */
}

.girl-image {
  max-width: 100%;
  max-height: 100%;
  pointer-events: auto; /* Enable clicking on the image */
}

.speech-bubble {
  position: absolute;
  left: 5%; /* Adjust as necessary */
  bottom: 500px; /* Position above the girl */
  background-color: #fff;
  border-radius: 25px;
  padding: 15px;
  border: 2px solid #666;
  width: auto;
  pointer-events: auto; /* This enables clicking on the bubble */
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 10px rgba(0,0,0,0.1); /* Soft shadow for depth */
  /* Creates the arrow effect */
  &:after {
    content: '';
    position: absolute;
    bottom: -20px; /* Adjust this to move the arrow up or down */
    left: 50px; /* Center the arrow relative to the bubble */
    border-width: 10px;
    border-style: solid;
    border-color: #fff transparent transparent transparent;
    filter: drop-shadow(0 -3px 3px rgba(0,0,0,0.1)); /* Optional: shadow for the arrow */
  }
}

/* Style for clickable text within the speech bubble */
.speech-bubble-text {
  color: #666;
  font-weight: bold;
  cursor: pointer;
}

/* Hover effect for the text */
.speech-bubble-text:hover {
  text-decoration: underline;
}


.guide-container {
  position: absolute;
  right: 5%;
  bottom: 25%;
  transform: translateX(50%);
  cursor: pointer;
}
.guide-image {
  max-width: 100%;
  max-height: 100%; /* Make the image as large as possible within the instruction-prompt */
}

/* Style for the modal overlay that covers the screen */
.guide-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; /* Ensure it is on top of other content */
}

.guide-modal-content {
  width: auto; /* Adjust width to fit the content */
  max-width: 500px; /* Adjust the maximum width as needed */
  max-height: 500px; /* Adjust the maximum height as needed */
  overflow: auto; /* Allows scrolling if the gif is large */
  background: white;
  padding: 20px;
  border-radius: 10px; /* Optional for rounded corners */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.guide-animation {
  max-width: 100%;
  max-height: 100%; /* Ensure the GIF fits within the modal */
}




.game-background{
  background-color: #fffdf5;

}

/* Story page */
.img-container {
  height: 200px; 
  overflow: hidden; 
}

.img-container img {
  width: 100%;
  object-fit: cover; 

}

.text-container {
  min-height: 120px;
}

.card {
  display: flex;
  flex-direction: column;
  justify-content: space-between; 
  padding: 16px;
}
